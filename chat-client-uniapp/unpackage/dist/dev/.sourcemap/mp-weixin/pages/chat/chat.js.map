{"version":3,"file":"chat.js","sources":["pages/chat/chat.vue","pages/chat/chat.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"chat-container\">\n    <!-- 联系人列表 -->\n    <ContactList\n        :users=\"contacts\"\n        :selectedUserId=\"targetId\"\n        @select=\"handleSelectUser\"\n    />\n\n    <!-- 群组列表 -->\n    <GroupList\n        :groups=\"groups\"\n        :selectedGroupId=\"targetId\"\n        @select=\"handleSelectUser\"\n    />\n\n    <!-- 消息列表 -->\n    <scroll-view scroll-y class=\"msg-list\" :scroll-top=\"scrollTop\" @scrolltolower=\"loadMoreMessages\">\n      <view v-for=\"(item, index) in messages\" :key=\"index\"\n            :class=\"['msg-item', item.from === userId ? 'msg-sent' : 'msg-received']\">\n        <view class=\"msg-nickname\">{{ item.nickname || item.from }}</view>\n        <view class=\"msg-content\">{{ item.message }}</view>\n        <view class=\"msg-timestamp\">{{ formatTimestamp(item.timestamp) }}</view>\n\n        <!-- 发送状态显示 -->\n        <view v-if=\"item.from === userId\" class=\"msg-status\">\n          <text v-if=\"item.status === 'sending'\">发送中...</text>\n          <text v-if=\"item.status === 'failed'\">\n            发送失败\n            <button @click=\"retrySend(index)\">重试</button>\n          </text>\n        </view>\n      </view>\n    </scroll-view>\n\n    <!-- 输入区 -->\n    <view class=\"input-box\">\n      <input v-model=\"inputMsg\" placeholder=\"输入消息...\" class=\"msg-input\" />\n      <button @click=\"sendMsg\">发送</button>\n    </view>\n\n    <view>\n      <button @click=\"disconnect\">断开连接</button>\n    </view>\n\n    <!-- 连接状态显示 -->\n    <view class=\"status\">连接状态: {{ connectionStatus }}</view>\n  </view>\n</template>\n\n<script>\nimport { connectSocket, sendMsg, sendGroupMsg, isConnected, closeSocket } from '@/utils/socket.js'\nimport ContactList from '@/components/ContactList.vue'\nimport GroupList from '@/components/GroupList.vue'\n\nexport default {\n  components: {\n    ContactList,\n    GroupList\n  },\n  data() {\n    return {\n      messages: [],\n      inputMsg: '',\n      userId: '',\n      targetId: '',\n      contacts: [\n        {id: 'user1', name: '用户一', type: 'user'},\n        {id: 'user2', name: '用户二', type: 'user'}\n      ],\n      groups: [\n        {id: 'group1', name: '群聊1', type: 'group'},\n        {id: 'group2', name: '群聊2', type: 'group'}\n      ],\n      connectionStatus: '未连接',\n      scrollTop: 0, // 用于消息滚动控制\n    }\n  },\n  onLoad(options) {\n    this.userId = options.userId || 'user1'\n    console.log('[页面加载] 当前用户ID:', this.userId)\n    // 默认选中联系人或群组中非自己的第一个\n    this.targetId = this.contacts.concat(this.groups).find(c => c.id !== this.userId)?.id || ''\n    this.connectionStatus = '连接中...'\n\n    connectSocket(this.userId, (msg) => {\n      console.log('[WebSocket] 收到消息:', msg)\n      // 这里的 msg 可能是一条消息，也可能是服务端批量发送的消息数组\n      if (Array.isArray(msg)) {\n        // 批量离线消息，追加到 messages 列表\n        this.messages.push(...msg);\n      } else {\n        // 单条实时消息\n        this.messages.push(msg);\n      }\n\n      // 滚动到底部，显示最新消息\n      this.$nextTick(() => {\n        this.scrollTop = 100000;\n      });\n    });\n\n    // 监听连接状态变化（简单模拟，实际可扩展socket.js发事件）\n    setInterval(() => {\n      const status = isConnected() ? '已连接' : '未连接'\n      if (this.connectionStatus !== status) {\n        console.log('[连接状态] 状态变化:', status)\n      }\n      this.connectionStatus = status;\n    }, 1000)\n  },\n  methods: {\n    sendMsg() {\n      if (!this.inputMsg) return\n\n      // 根据选中目标是用户还是群组，调用不同接口\n      const target = this.contacts.concat(this.groups).find(c => c.id === this.targetId)\n      if (!target) {\n        uni.showToast({title: '请选择联系人或群组', icon: 'none'})\n        return\n      }\n      console.log('[发送] 目标:', this.targetId, '消息:', this.inputMsg)\n\n      if (target.type === 'user') {\n        sendMsg(this.targetId, this.inputMsg, this.userId)\n      } else if (target.type === 'group') {\n        sendGroupMsg(this.targetId, this.inputMsg, this.userId)\n      }\n\n      // 本地先添加消息（发送者自己） - 使用统一的 ChatMessage 格式\n      this.messages.push({\n        cmd: target.type === 'user' ? 2 : 3,\n        type: target.type,\n        from: this.userId,\n        to: this.targetId,\n        message: this.inputMsg,\n        timestamp: new Date().getTime()\n      })\n\n      console.log('[发送] 本地消息列表长度:', this.messages.length)\n\n      this.inputMsg = ''\n\n      this.$nextTick(() => {\n        this.scrollTop = 100000\n      })\n    },\n\n    handleSelectUser(id) {\n      this.targetId = id\n      console.log('[切换聊天对象] 目标ID:', id)\n      // 切换聊天对象时清空消息（可改为加载历史）\n      this.messages = []\n    },\n\n    loadMoreMessages() {\n      // TODO: 实现消息分页加载\n      console.log('滚动到底部，加载更多消息')\n    },\n\n    // 关闭连接操作\n    disconnect() {\n      closeSocket()\n      console.log('手动断开 WebSocket 连接')\n    },\n\n    formatTimestamp(ts) {\n      if (!ts) return '';\n      const date = new Date(ts);\n      const h = date.getHours().toString().padStart(2, '0');\n      const m = date.getMinutes().toString().padStart(2, '0');\n      return `${h}:${m}`;\n    }\n  }\n}\n</script>\n\n<style>\n.chat-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.msg-list {\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n}\n\n.msg-item {\n  margin: 5px 0;\n  max-width: 70%;\n  padding: 8px 12px;\n  border-radius: 10px;\n  word-wrap: break-word;\n  display: flex;\n  flex-direction: column;\n}\n\n/* 自己发的消息右对齐，背景颜色不同 */\n.msg-sent {\n  align-self: flex-end;\n  background-color: #DCF8C6;\n}\n\n/* 对方消息左对齐 */\n.msg-received {\n  align-self: flex-start;\n  background-color: #FFF;\n  border: 1px solid #ddd;\n}\n\n.msg-nickname {\n  font-weight: bold;\n  font-size: 12px;\n  margin-bottom: 4px;\n  color: #555;\n}\n\n.msg-content {\n  font-size: 14px;\n  color: #333;\n}\n\n.msg-timestamp {\n  font-size: 10px;\n  color: #999;\n  align-self: flex-end;\n  margin-top: 4px;\n}\n\n.input-box {\n  display: flex;\n  padding: 10px;\n}\n\n.msg-input {\n  flex: 1;\n  border: 1px solid #ccc;\n  padding: 5px;\n}\n\n.status {\n  padding: 5px 10px;\n  font-size: 12px;\n  color: #888;\n}\n\n.msg-status {\n  font-size: 12px;\n  color: #888;\n  margin-top: 2px;\n}\n.msg-status button {\n  margin-left: 6px;\n  font-size: 12px;\n  color: #f56c6c;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n</style>","import MiniProgramPage from '/Users/Zhuanz/Documents/t-io/chat-system/chat-client-uniapp/pages/chat/chat.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","connectSocket","isConnected","sendMsg","sendGroupMsg","closeSocket"],"mappings":"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"}