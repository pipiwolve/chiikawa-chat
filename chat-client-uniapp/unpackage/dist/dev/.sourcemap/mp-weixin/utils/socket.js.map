{"version":3,"file":"socket.js","sources":["utils/socket.js"],"sourcesContent":["let socketTask = null;\nlet reconnectTimer = null;\nlet reconnectCount = 0;\nconst MAX_RECONNECT = 6;\n\nlet currentUserId = null;\nlet messageQueue = [];\nconst QUEUE_KEY = 'socket_message_queue';\n\nfunction persistQueue() {\n    try {\n        uni.setStorageSync(QUEUE_KEY, messageQueue);\n        console.log('[socket] ÁºìÂ≠òÈòüÂàóÂ∑≤ÊåÅ‰πÖÂåñÔºåÈïøÂ∫¶:', messageQueue.length);\n    } catch (e) {\n        console.error('[socket] persistQueue error', e);\n    }\n}\nfunction loadQueueFromStorage() {\n    try {\n        const q = uni.getStorageSync(QUEUE_KEY);\n        messageQueue = Array.isArray(q) ? q : [];\n        console.log('[socket] ‰ªéÊú¨Âú∞ÁºìÂ≠òÊÅ¢Â§çÈòüÂàóÔºåÈïøÂ∫¶:', messageQueue.length);\n\n    } catch (e) {\n        messageQueue = [];\n    }\n}\n\nconst CONNECT_STATUS = {\n    DISCONNECTED: 0,\n    CONNECTING: 1,\n    CONNECTED: 2,\n};\nlet connectStatus = CONNECT_STATUS.DISCONNECTED;\n\nexport function connectSocket(userId, onMessage) {\n    if (connectStatus === CONNECT_STATUS.CONNECTED || connectStatus === CONNECT_STATUS.CONNECTING) {\n        console.warn('WebSocket Â∑≤ÁªèËøûÊé•ÊàñÊ≠£Âú®ËøûÊé•‰∏≠ÔºåË∑≥ËøáÈáçÂ§çËøûÊé•');\n        return;\n    }\n\n    currentUserId = userId;\n    connectStatus = CONNECT_STATUS.CONNECTING;\n    console.log('[socket] ÂáÜÂ§áËøûÊé• WebSocketÔºåÁî®Êà∑ID:', userId);\n\n    const wsUrl = `ws://192.168.110.238:9326?name=${encodeURIComponent(userId)}`; // ÊõøÊç¢Êàê‰Ω†ÁöÑÂ±ÄÂüüÁΩëIPÂíåÁ´ØÂè£\n    socketTask = uni.connectSocket({\n        url: wsUrl,\n        success() {\n            console.log('WebSocket ËøûÊé•ËØ∑Ê±ÇÂèëËµ∑');\n        },\n        fail(err) {\n            console.error('WebSocket ËøûÊé•ËØ∑Ê±ÇÂ§±Ë¥•', err);\n            attemptReconnect(onMessage);\n        },\n    });\n\n    socketTask.onOpen(() => {\n        console.log('üì° WebSocket Â∑≤ÊâìÂºÄ');\n        connectStatus = CONNECT_STATUS.CONNECTED;\n        reconnectCount = 0;\n\n        const loginData = {\n            cmd: 1,\n            from: currentUserId,\n        };\n        socketTask.send({ data: JSON.stringify(loginData) });\n\n        loadQueueFromStorage();\n        flushQueue();\n    });\n\n    //Êé•ÂèóÂêéÁ´Ø‰º†Êù•ÁöÑwsresponse\n    socketTask.onMessage((res) => {\n        const dataStr = res.data;\n        if (!dataStr || dataStr === 'null' || dataStr === 'undefined') {\n            console.warn('Êî∂Âà∞Êó†ÊïàÊ∂àÊÅØ:', dataStr);\n            return;\n        }\n        // Âà§Êñ≠ÊòØÂê¶ÊòØ JSON Ê†ºÂºè\n        if (dataStr.trim().startsWith('{') || dataStr.trim().startsWith('[')) {\n            try {\n                const data = JSON.parse(dataStr);\n                onMessage && onMessage(data);\n            } catch (e) {\n                console.error('Ê∂àÊÅØËß£ÊûêÈîôËØØ', e, dataStr);\n            }\n        } else {\n            // Èùû JSONÔºåËßÜ‰∏∫ÊôÆÈÄöÊñáÊú¨Ê∂àÊÅØÔºåÂèØÊ†πÊçÆ‰∏öÂä°ÈúÄÊ±ÇÂ§ÑÁêÜ\n            console.log('Êî∂Âà∞Èùû JSON Ê∂àÊÅØ:', dataStr);\n        }\n    });\n\n    socketTask.onClose(() => {\n        console.log('WebSocket Â∑≤ÂÖ≥Èó≠');\n        connectStatus = CONNECT_STATUS.DISCONNECTED;\n        attemptReconnect(onMessage);\n    });\n\n    socketTask.onError((err) => {\n        console.error('WebSocket ÈîôËØØ', err);\n        connectStatus = CONNECT_STATUS.DISCONNECTED;\n        attemptReconnect(onMessage);\n    });\n}\n\n// ÊîπËøõÂêéÁöÑÈáçËøûÁ≠ñÁï•ÔºåÈ¶ñ‰∏™ÈáçËøûÂª∂Êó∂3ÁßíÔºåÊåáÊï∞Â¢ûÈïøÔºåÊúÄÈïø30Áßí\nfunction attemptReconnect(onMessage) {\n    if (reconnectCount >= MAX_RECONNECT) {\n        console.warn('ÈáçËøûÊ¨°Êï∞ËææÂà∞‰∏äÈôêÔºåÂÅúÊ≠¢ÈáçËøû');\n        return;\n    }\n    if (reconnectTimer) return; // Â∑≤ÊúâÈáçËøû‰ªªÂä°\n\n    reconnectCount++;\n    const delay = Math.min(30000, 5000 * Math.pow(2, reconnectCount - 1)); // 3ÁßíËµ∑Ê≠•\n    console.log(`Á¨¨${reconnectCount}Ê¨°ÈáçËøûÔºå${delay}msÂêéÂ∞ùËØï`);\n\n    reconnectTimer = setTimeout(() => {\n        reconnectTimer = null;\n        connectSocket(currentUserId, onMessage);\n    }, delay);\n}\n\nfunction flushQueue() {\n    if (!messageQueue.length) {\n        console.log('[socket] flushQueueÔºöÊó†ÁºìÂ≠òÊ∂àÊÅØÈúÄË¶ÅÂèëÈÄÅ');\n        return;\n    }\n    console.log('[socket] flushQueue start, Ê∂àÊÅØÊï∞Èáè:', messageQueue.length);\n\n    const sendNext = () => {\n        if (!messageQueue.length) {\n            console.log('[socket] flushQueue ÂÆåÊàêÔºåÁºìÂ≠òÈòüÂàóÊ∏ÖÁ©∫');\n            persistQueue();\n            return;\n        }\n        const item = messageQueue[0];\n        try {\n            socketTask.send({\n                data: JSON.stringify(item),\n                success() {\n                    console.log('[socket] flushQueue ÂèëÈÄÅÊàêÂäü:', item);\n                    messageQueue.shift();\n                    persistQueue();\n                    setTimeout(sendNext, 50);\n                },\n                fail(err) {\n                    console.warn('[socket] flush fail', err);\n                    // ‰∏çÁßªÈô§Ê∂àÊÅØÔºåÁ≠âÂæÖ‰∏ã‰∏ÄÊ¨°ÈáçÂèë\n                },\n            });\n        } catch (e) {\n            console.error('[socket] flush exception', e);\n            // ÂºÇÂ∏∏Êó∂‰∏çÁßªÈô§Ôºå‰øùÊåÅÊ∂àÊÅØÔºåÁ≠âÂæÖ‰∏ãÊ¨°ÈáçÂèë\n        }\n    };\n    sendNext();\n}\n\nexport function sendMsg(toUserId, msg, fromUserId, onStatusChange) {\n    const data = {\n        cmd: 2,\n        type: 'private',\n        from: fromUserId,\n        to: toUserId,\n        message: msg,\n        timestamp: Date.now(),\n    };\n    console.log('[socket] sendMsg Ë∞ÉÁî®ÔºåÊ∂àÊÅØ:', data);\n    sendData(data, onStatusChange);\n}\n\nexport function sendGroupMsg(groupId, msg, fromUserId, onStatusChange) {\n    const data = {\n        cmd: 3,\n        type: 'group',\n        from: fromUserId,\n        to: groupId,\n        message: msg,\n        timestamp: Date.now(),\n    };\n    console.log('[socket] sendGroupMsg Ë∞ÉÁî®ÔºåÊ∂àÊÅØ:', data);\n    sendData(data, onStatusChange);\n}\n\nfunction sendData(data, onStatusChange) {\n    if (connectStatus !== CONNECT_STATUS.CONNECTED) {\n        console.warn('WebSocket Êú™ËøûÊé•ÔºåÊ∂àÊÅØÂä†ÂÖ•ÈòüÂàóÁºìÂ≠ò', data);\n        messageQueue.push(data);\n        persistQueue();\n        if (onStatusChange) onStatusChange('failed');\n        return;\n    }\n    if (!socketTask) {\n        console.error('WebSocket ËøûÊé•‰∏çÂ≠òÂú®ÔºåÂèëÈÄÅÂ§±Ë¥•', data);\n        messageQueue.push(data);\n        persistQueue();\n        if (onStatusChange) onStatusChange('failed');\n        return;\n    }\n    try {\n        socketTask.send({\n            data: JSON.stringify(data),\n            success() {\n                console.log('[socket] Ê∂àÊÅØÂèëÈÄÅÊàêÂäü', data);\n                if (onStatusChange) onStatusChange('success');\n            },\n            fail(err) {\n                console.error('ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•ÔºåÂä†ÂÖ•ÁºìÂ≠ò', err, data);\n                messageQueue.push(data);\n                persistQueue();\n                if (onStatusChange) onStatusChange('failed');\n            },\n        });\n    } catch (e) {\n        console.error('ÂèëÈÄÅÊ∂àÊÅØÂºÇÂ∏∏ÔºåÊ∂àÊÅØÂä†ÂÖ•ÁºìÂ≠ò', e, data);\n        messageQueue.push(data);\n        persistQueue();\n        if (onStatusChange) onStatusChange('failed');\n    }\n}\n\nexport function closeSocket() {\n    if (socketTask) {\n        console.log('[socket] ‰∏ªÂä®ÂÖ≥Èó≠ WebSocket ËøûÊé•');\n        socketTask.close();\n        socketTask = null;\n        connectStatus = CONNECT_STATUS.DISCONNECTED;\n        if (reconnectTimer) {\n            clearTimeout(reconnectTimer);\n            reconnectTimer = null;\n        }\n        reconnectCount = 0;\n    }\n}\n\nexport function isConnected() {\n    return connectStatus === CONNECT_STATUS.CONNECTED;\n}"],"names":["uni"],"mappings":"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"}